services:
  carrinho:
    build:
      context: ./carrinho
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - mfe-network
    volumes:
      - ./carrinho:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - mfe-network
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  home:
    build:
      context: ./home
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - mfe-network
    volumes:
      - ./home:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - mfe-network
    depends_on:
      carrinho:
        condition: service_healthy
      dashboard:
        condition: service_healthy
      home:
        condition: service_healthy
    volumes:
      - ./app:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  mfe-network:
    driver: bridge